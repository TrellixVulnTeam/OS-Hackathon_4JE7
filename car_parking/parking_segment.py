# -*- coding: utf-8 -*-
"""Parking_segment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13oDTA9vTFbnF0UDhrJrs40cq2iLrmQBH
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

img = cv2.imread('/content/Capture.JPG')

plt.imshow(img[...,::-1])

# img = cv2.imread('dave.JPG')
img = cv2.imread('/content/Capture.JPG')
gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
edges = cv2.Canny(gray,10,100,apertureSize = 5)
minLineLength = 2
maxLineGap = 10
lines = cv2.HoughLinesP(edges,1,np.pi/180,100,minLineLength,maxLineGap)
for x1,y1,x2,y2 in lines[0]:
    cv2.line(img,(x1,y1),(x2,y2),(0,255,0),2)

plt.imshow(img[...,::-1])

print(lines)

img = cv2.imread('/content/Capture.JPG')
gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
edges = cv2.Canny(gray,100,250,apertureSize = 7)

lines = cv2.HoughLines(edges,1,np.pi/180,30)
for rho,theta in lines[0]:
    a = np.cos(theta)
    b = np.sin(theta)
    x0 = a*rho
    y0 = b*rho
    x1 = int(x0 + 1000*(-b))
    y1 = int(y0 + 1000*(a))
    x2 = int(x0 - 1000*(-b))
    y2 = int(y0 - 1000*(a))

    cv2.line(img,(x1,y1),(x2,y2),(0,255,0),2)

plt.imshow(edges, cmap = 'gray')

plt.imshow(img[...,::-1])

img = cv2.imread('/content/car_top.JPG')
gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
edges = cv2.Canny(gray,700,1050,apertureSize = 7)

lines = cv2.HoughLines(edges,1,np.pi/180,30)
for rho,theta in lines[0]:
    a = np.cos(theta)
    b = np.sin(theta)
    x0 = a*rho
    y0 = b*rho
    x1 = int(x0 + 1000*(-b))
    y1 = int(y0 + 1000*(a))
    x2 = int(x0 - 1000*(-b))
    y2 = int(y0 - 1000*(a))

    cv2.line(img,(x1,y1),(x2,y2),(0,255,0),2)

plt.imshow(img[...,::-1])

plt.imshow(edges, cmap = 'gray')

# img = cv2.imread('dave.JPG')
img = cv2.imread('/content/car_top.JPG')
gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
edges = cv2.Canny(gray,10,100,apertureSize = 5)
minLineLength = 2
maxLineGap = 5
lines = cv2.HoughLinesP(edges,1,np.pi/180,100,minLineLength,maxLineGap)
for x1,y1,x2,y2 in lines[0]:
    cv2.line(img,(x1,y1),(x2,y2),(0,255,0),2)

plt.imshow(img[...,::-1])

